{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_burnUnconfiguredContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mintUnconfiguredContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506167408061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000f15760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa91462000188578063ba414fa61462000192578063e20c9f7114620001ad578063fa7626d414620001b757600080fd5b806385226c81146200015b578063916a17c614620001745780639fbee575146200017e57600080fd5b80633e5e3c2311620000cc5780633e5e3c23146200012e5780633f7286f4146200013857806366d9a9a0146200014257600080fd5b80630a9254e414620000f65780631c9085fd14620001025780631ed7831c146200010c575b600080fd5b62000100620001c5565b005b620001006200054c565b6200011662000b6f565b604051620001259190620015ac565b60405180910390f35b6200011662000be0565b6200011662000c4f565b6200014c62000cbe565b60405162000125919062001608565b6200016562000dd3565b60405162000125919062001774565b6200014c62000ead565b6200010062000fb9565b620001656200115d565b6200019c62001237565b604051901515815260200162000125565b62000116620013a1565b6000546200019c9060ff1681565b6004601e819055601f55604051620001dd9062001590565b60408082526004908201527f4e616d650000000000000000000000000000000000000000000000000000000060608201526080602082018190526006908201527f53594d424f4c000000000000000000000000000000000000000000000000000060a082015260c001604051809103906000f08015801562000263573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905560005b601e548110156200035f57601c6000604051620002c9906200159e565b620002d59190620017f8565b604051809103906000f080158015620002f2573d6000803e3d6000fd5b5081546001810183556000928352602090922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905580620003568162001882565b915050620002ac565b5060005b601f548110156200040957601d6200039d826040516020016200038891815260200190565b60405160208183030381529060405262001410565b81546001810183556000928352602090922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905580620004008162001882565b91505062000363565b5060005b601f54811015620005495760005b601e548110156200053357601c81815481106200043c576200043c620018e2565b600091825260209091200154601d805473ffffffffffffffffffffffffffffffffffffffff909216916340c10f199190859081106200047f576200047f620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90911660048201526b204fce5e3e250261100000006024820152604401600060405180830381600087803b1580156200050457600080fd5b505af115801562000519573d6000803e3d6000fd5b5050505080806200052a9062001882565b9150506200041b565b5080620005408162001882565b9150506200040d565b50565b601d8054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa7916000906200057e576200057e620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b158015620005f157600080fd5b505af115801562000606573d6000803e3d6000fd5b50505050601c600081548110620006215762000621620018e2565b600091825260209091200154601b546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152678ac7230489e80000602482015291169063a9059cbb906044016020604051808303816000875af1158015620006ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006d3919062001911565b506040517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f20707269636500000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b1580156200076857600080fd5b505af11580156200077d573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169350630d4d1513925090600090620007ba57620007ba620018e2565b6000918252602082200154601d805473ffffffffffffffffffffffffffffffffffffffff90921692678ac7230489e8000092620007fb57620007fb620018e2565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019290925291909116604482015260640160408051808303816000875af115801562000883573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a991906200193c565b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169163132bc3869190600090620008e457620008e4620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152600a6024820152604401600060405180830381600087803b1580156200095e57600080fd5b505af115801562000973573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff909216935063457972de925090600090620009b057620009b0620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152600a6024820152604401600060405180830381600087803b15801562000a2a57600080fd5b505af115801562000a3f573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169350630d4d151392509060009062000a7c5762000a7c620018e2565b6000918252602082200154601d805473ffffffffffffffffffffffffffffffffffffffff90921692678ac7230489e800009262000abd5762000abd620018e2565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019290925291909116604482015260640160408051808303816000875af115801562000b45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6b91906200193c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000bd657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000db157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000d5d5790505b5050505050815250508152602001906001019062000ce2565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57838290600052602060002001805462000e199062001961565b80601f016020809104026020016040519081016040528092919081815260200182805462000e479062001961565b801562000e985780601f1062000e6c5761010080835404028352916020019162000e98565b820191906000526020600020905b81548152906001019060200180831162000e7a57829003601f168201915b50505050508152602001906001019062000df7565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000fa057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000f4c5790505b5050505050815250508152602001906001019062000ed1565b601d8054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa79160009062000feb5762000feb620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156200105e57600080fd5b505af115801562001073573d6000803e3d6000fd5b50506040517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f20707269636500000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150606401600060405180830381600087803b1580156200110b57600080fd5b505af115801562001120573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff909216935063b8ce670d92509060009062000a7c5762000a7c620018e2565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000dca578382906000526020600020018054620011a39062001961565b80601f0160208091040260200160405190810160405280929190818152602001828054620011d19062001961565b8015620012225780601f10620011f65761010080835404028352916020019162001222565b820191906000526020600020905b8154815290600101906020018083116200120457829003601f168201915b50505050508152602001906001019062001181565b60008054610100900460ff1615620012585750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200139c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162001300917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620019b6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526200133a9162001a00565b6000604051808303816000865af19150503d806000811462001379576040519150601f19603f3d011682016040523d82523d6000602084013e6200137e565b606091505b509150508080602001905181019062001398919062001911565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b60006200141d8262001424565b5092915050565b600080826040516020016200143a919062001a00565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620014da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001500919062001a1e565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062001557908590879060040162001a56565b600060405180830381600087803b1580156200157257600080fd5b505af115801562001587573d6000803e3d6000fd5b50505050915091565b6139188062001a9083390190565b61136380620053a883390190565b6020808252825182820181905260009190848201906040850190845b81811015620015fc57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101620015c8565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620016f3578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620016dd5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062001699565b50978a0197955050509187019160010162001630565b50919998505050505050505050565b60005b838110156200171f57818101518382015260200162001705565b50506000910152565b600081518084526200174281602086016020860162001702565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620017eb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452620017d885835162001728565b945092850192908501906001016200179b565b5092979650505050505050565b6060815260006200183660608301600581527f746f6b656e000000000000000000000000000000000000000000000000000000602082015260400190565b82810360208401526200187381600581527f746f6b656e000000000000000000000000000000000000000000000000000000602082015260400190565b91505082604083015292915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620018db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156200192457600080fd5b815180151581146200193557600080fd5b9392505050565b600080604083850312156200195057600080fd5b505080516020909101519092909150565b600181811c908216806200197657607f821691505b602082108103620019b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620019f281600485016020870162001702565b919091016004019392505050565b6000825162001a1481846020870162001702565b9190910192915050565b60006020828403121562001a3157600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146200193557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062001a87604083018462001728565b94935050505056fe60806040523480156200001157600080fd5b5060405162003918380380620039188339810160408190526200003491620001b5565b81816003620000448382620002ae565b506004620000538282620002ae565b505050620000706200006a6200009a60201b60201c565b6200009e565b505060108054336001600160a01b031991821681179092556011805490911690911790556200037a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011857600080fd5b81516001600160401b0380821115620001355762000135620000f0565b604051601f8301601f19908116603f01168101908282118183101715620001605762000160620000f0565b816040528381526020925086838588010111156200017d57600080fd5b600091505b83821015620001a1578582018301518183018401529082019062000182565b600093810190920192909252949350505050565b60008060408385031215620001c957600080fd5b82516001600160401b0380821115620001e157600080fd5b620001ef8683870162000106565b935060208501519150808211156200020657600080fd5b50620002158582860162000106565b9150509250929050565b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a957600081815260208120601f850160051c81016020861015620002845750805b601f850160051c820191505b81811015620002a55782815560010162000290565b5050505b505050565b81516001600160401b03811115620002ca57620002ca620000f0565b620002e281620002db84546200021f565b846200025b565b602080601f8311600181146200031a5760008415620003015750858301515b600019600386901b1c1916600185901b178555620002a5565b600085815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61358e806200038a6000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c806371bff8c5116101a7578063bda53107116100ee578063ea2347c811610097578063f2fde38b11610071578063f2fde38b146107e3578063f474c780146107f6578063f70210ea1461080957600080fd5b8063ea2347c81461076c578063ecc777bc14610775578063f11b81881461077e57600080fd5b8063e165677d116100c8578063e165677d1461073d578063e2ceddac14610746578063e68defac1461075957600080fd5b8063bda53107146106dc578063dd62ed3e146106ef578063dd68d8db1461073557600080fd5b806395d89b4111610150578063a9059cbb1161012a578063a9059cbb14610696578063b3f00674146106a9578063b8ce670d146106c957600080fd5b806395d89b41146106685780639f7a417114610670578063a457c2d71461068357600080fd5b8063887c70dd11610181578063887c70dd1461061b5780638da5cb5b1461063b578063918f86741461065957600080fd5b806371bff8c5146105a0578063742978da146105b3578063753045201461060857600080fd5b80633429d5221161026b5780635edf79f4116102145780636e81221c116101ee5780636e81221c1461052f57806370a0823114610562578063715018a61461059857600080fd5b80635edf79f414610501578063677122a4146105145780636ddca2101461052757600080fd5b806342afdb271161024557806342afdb27146104d2578063457972de146104e5578063582bee14146104f857600080fd5b80633429d5221461045857806339509351146104b65780633d463584146104c957600080fd5b806318160ddd116102cd57806325b5c6e3116102a757806325b5c6e3146104235780632b77dc0314610436578063313ce5671461044957600080fd5b806318160ddd146103c357806320531bc9146103cb57806323b872dd1461041057600080fd5b80630d18d036116102fe5780630d18d0361461037d5780630d4d151314610386578063132bc386146103ae57600080fd5b806306fdde031461032557806307ebdb2e14610343578063095ea7b31461035a575b600080fd5b61032d610812565b60405161033a919061306b565b60405180910390f35b61034c600e5481565b60405190815260200161033a565b61036d610368366004613100565b6108a4565b604051901515815260200161033a565b61034c600b5481565b61039961039436600461312a565b6108be565b6040805192835260208301919091520161033a565b6103c16103bc366004613100565b610c5b565b005b60025461034c565b6010546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161033a565b61036d61041e366004613166565b610dd3565b6103c16104313660046131a2565b610df9565b6103c16104443660046131bb565b610e3d565b6040516012815260200161033a565b610460610eb8565b60405161033a9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61036d6104c4366004613100565b610f08565b61034c60085481565b6103c16104e03660046131a2565b610f54565b6103c16104f3366004613100565b610f91565b61034c60095481565b6103c161050f3660046131a2565b61113f565b61034c6105223660046132bd565b61117c565b6104606111d4565b61054261053d366004613378565b61121f565b60408051948552602085019390935291830152606082015260800161033a565b61034c6105703660046131bb565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6103c16117af565b6103c16105ae3660046131a2565b6117c3565b6105c66105c13660046131bb565b611800565b60405161033a9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6103c16106163660046133c5565b611897565b6011546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60055473ffffffffffffffffffffffffffffffffffffffff166103eb565b61034c670de0b6b3a764000081565b61032d6119aa565b6103c161067e3660046131a2565b6119b9565b61036d610691366004613100565b6119f6565b61036d6106a4366004613100565b611ab8565b600f546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b6103996106d736600461312a565b611ac6565b6103c16106ea3660046131bb565b611dca565b61034c6106fd3660046133c5565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b610460611e45565b61034c600a5481565b61034c6107543660046133f8565b611e90565b6104606107673660046131a2565b611f4d565b61034c600d5481565b61034c60075481565b6107bb61078c3660046131bb565b600660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a00161033a565b6103c16107f13660046131bb565b611fd2565b6103c16108043660046131a2565b61206f565b61034c600c5481565b60606003805461082190613423565b80601f016020809104026020016040519081016040528092919081815260200182805461084d90613423565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b5050505050905090565b6000336108b28185856120ac565b60019150505b92915050565b600080836000036109165760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f207368617265000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660209081526040808320815160a0810183528154815260018201549381018490526002820154928101929092526003810154606083015260040154608082015291036109c25760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2070726963650000000000000000000000604482015260640161090d565b8060800151600003610a165760405162461bcd60e51b815260206004820152601760248201527f4d554c5449504f4f4c3a207a65726f2070657263656e74000000000000000000604482015260640161090d565b6000610a23600c54611f4d565b90506000610a318389611e90565b90506000610a3e60025490565b600003610a4b5781610a58565b610a58888486600061117c565b9050610a6583858361222c565b955081861115610add5760405162461bcd60e51b815260206004820152602160248201527f4d554c5449504f4f4c3a206d696e7420616d6f756e7420696e2065786565646560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b825160075560a08301519450600085610af688856134a5565b610b0091906134b8565b9050610b0c888a6125c7565b73ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020908152604091829020875181559087015160018201559086015160028201556060860151600382015560808601516004909101558015610c01576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152602482018390528b169063a9059cbb906044016020604051808303816000875af1158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff91906134cb565b505b845160405190815273ffffffffffffffffffffffffffffffffffffffff8b16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a25050505050935093915050565b60115473ffffffffffffffffffffffffffffffffffffffff163314610cc25760405162461bcd60e51b815260206004820152601f60248201527f4d554c5449504f4f4c3a206f6e6c792070657263656e74732073657474657200604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082018190526008548391610d34916134a5565b610d3e91906134b8565b6008556080810182815273ffffffffffffffffffffffffffffffffffffffff8416600081815260066020908152604091829020855181558186015160018201558286015160028201556060860151600382015593516004909401939093555184815290917feddaf9a054fe5ebd155e55ca4e1442c849a15fcdb5ceae0e5cc41338e7967ba891015b60405180910390a2505050565b600033610de18582856126a0565b610dec85858561275d565b60019150505b9392505050565b610e0161297e565b600c8190556040518181527faa3e0a46af827fa4016b300eeeb164f0ba70f8cd67066aac8cfe0d139e3fed3c906020015b60405180910390a150565b610e4561297e565b601180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f5e55141d8a32e5d91733243e0f44e7346cb25138cfdc5b0e888bb6d9cb75f98b90602001610e32565b610ef86040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600d54611f4d565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906108b29082908690610f4f9087906134b8565b6120ac565b610f5c61297e565b600b8190556040518181527fd52e2e0d2193bde49ac3490f3950077ccdcb07356f5b7d3b0698846de6fb99af90602001610e32565b60105473ffffffffffffffffffffffffffffffffffffffff163314610ff85760405162461bcd60e51b815260206004820152601c60248201527f4d554c5449504f4f4c3a206f6e6c792070726963652073657474657200000000604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a081018452815480825260018301549382019390935260028201549381019390935260038101546060840152600401546080830152670de0b6b3a76400009061106e9084906134ed565b6110789190613504565b60208201518251670de0b6b3a764000091611092916134ed565b61109c9190613504565b6007546110a991906134a5565b6110b391906134b8565b600755602081810183815273ffffffffffffffffffffffffffffffffffffffff85166000818152600684526040908190208551815592516001840155808501516002840155606085015160038401556080850151600490930192909255905184815290917fe36d0063be3f369ddabba6d2343d37d5dff081050a7be61867fc42cfdeda85f59101610dc6565b61114761297e565b60098190556040518181527fbf579fd018eba5b424b00da7c3ace7787a8925ad1ff435a6ae57f0f3be66b02c90602001610e32565b600082602001518261118d60025490565b61119791906134b8565b8551670de0b6b3a7640000906111ad90896134ed565b6111b791906134ed565b6111c19190613504565b6111cb9190613504565b95945050505050565b6112146040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600c54611f4d565b6000806000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036112a05760405162461bcd60e51b815260206004820152601660248201527f4d554c5449504f4f4c3a2073616d652061737365747300000000000000000000604482015260640161090d565b6000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060006113ad600e54611f4d565b905060006113bb848d611e90565b905060006113cc8b8487600061117c565b90506113d983868361222c565b98508189111561142b5760405162461bcd60e51b815260206004820152601c60248201527f4d554c5449504f4f4c3a20616d6f756e7420696e206578656564656400000000604482015260640161090d565b5060a08201805160009182905296506114468b84868261117c565b90506114538385836129e5565b97508260a00151955082600001516007819055505083600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015590505082600660008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506000858861156091906134b8565b11156116235773ffffffffffffffffffffffffffffffffffffffff8b1663a9059cbb8a61158d888b6134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162191906134cb565b505b600061162f89836134a5565b61163990886134b8565b11156117065773ffffffffffffffffffffffffffffffffffffffff8c1663a9059cbb8a6116668b856134a5565b611670908a6134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170491906134cb565b505b835160405190815273ffffffffffffffffffffffffffffffffffffffff8d16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a2825160405190815273ffffffffffffffffffffffffffffffffffffffff8c16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a250505050945094509450949050565b6117b761297e565b6117c16000612e6c565b565b6117cb61297e565b600a8190556040518181527fc260294de91f63c2935a5b9f966443a3ff51b35068e16661d55211504de3d86490602001610e32565b6118326040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260066020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b61189f61297e565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526006602052604080822060028101805493905590517fa9059cbb0000000000000000000000000000000000000000000000000000000081529385166004850152602484018290529290919063a9059cbb906044016020604051808303816000875af115801561192f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195391906134cb565b508373ffffffffffffffffffffffffffffffffffffffff167f0ff8fb19717c1e3aa6ab438071b1fab0a6143353cd8b5224741cc0656cf5305b8260405161199c91815260200190565b60405180910390a250505050565b60606004805461082190613423565b6119c161297e565b600d8190556040518181527f8779c4ca044dfeafa1290475dd75fe21d2256f66f4a067b1dcf62dab5a7729ea90602001610e32565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015611aa05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161090d565b611aad82868684036120ac565b506001949350505050565b6000336108b281858561275d565b60008083600003611b195760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2073686172650000000000000000000000604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660209081526040808320815160a081018352815481526001820154938101849052600282015492810192909252600381015460608301526004015460808201529103611bc55760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2070726963650000000000000000000000604482015260640161090d565b8060800151600003611c195760405162461bcd60e51b815260206004820152601760248201527f4d554c5449504f4f4c3a207a65726f2070657263656e74000000000000000000604482015260640161090d565b6000611c26600d54611f4d565b90506000611c37878385600061117c565b9050611c448284836129e5565b825160075560a08301519095509350611c5d3088612ee3565b73ffffffffffffffffffffffffffffffffffffffff88166000818152600660209081526040918290208651815590860151600182015590850151600282015560608501516003820155608085015160049091015563a9059cbb87611cc187896134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5591906134cb565b5030600081815260208190526040902054611d729190889061275d565b825160405190815273ffffffffffffffffffffffffffffffffffffffff8916907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a2505050935093915050565b611dd261297e565b601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f0be4a9fa8ca97505525c993411db321f6e9aa3174f2cefa1884f17025b8eaabc90602001610e32565b611e856040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600e54611f4d565b6060820151604080840151845191517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600093929073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015611f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2f919061353f565b611f3991906134a5565b611f4391906134a5565b610df291906134a5565b611f8d6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600754815260200160085481526020016009548152602001600a54815260200183815260200160008152602001600b548152509050919050565b611fda61297e565b73ffffffffffffffffffffffffffffffffffffffff81166120635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161090d565b61206c81612e6c565b50565b61207761297e565b600e8190556040518181527f14a9aef9e0be2aa631df9028cf396b63ced8fe9e2fe7e9062d29325dca5f925690602001610e32565b73ffffffffffffffffffffffffffffffffffffffff83166121345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff82166121bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b8251600090810361227857670de0b6b3a764000083602001518361225091906134ed565b61225a9190613504565b845282518290849061226d9083906134b8565b905250819050610df2565b8351602084015184516000929161228e916134ed565b6122989190613504565b90506000670de0b6b3a76400008560200151856122b591906134ed565b6122bf9190613504565b86516122cb91906134b8565b602086015186516122dd9087906134b8565b6122e791906134ed565b6122f19190613504565b905060008660200151670de0b6b3a7640000876080015161231291906134ed565b61231c9190613504565b905060008183116123365761233183836134a5565b612340565b61234082846134a5565b9050600082851161235a5761235585846134a5565b612364565b61236483866134a5565b90508082116124055780156123c95760008161238084826134a5565b8a6060015161238f91906134ed565b6123999190613504565b905080896060018181516123ad91906134a5565b90525060a08a0180518291906123c49083906134b8565b905250505b670de0b6b3a76400008960800151670de0b6b3a76400006123ea91906134b8565b6123f490896134ed565b6123fe9190613504565b955061253a565b886060015182106124585760405162461bcd60e51b815260206004820152601d60248201527f4d554c5449504f4f4c3a20646576696174696f6e206f766572666c6f77000000604482015260640161090d565b6000828a6060015161246a91906134a5565b8a6060015189858d6040015161248091906134ed565b61248a91906134ed565b6124949190613504565b61249e9190613504565b90506000670de0b6b3a7640000828c60c001516124bb91906134ed565b6124c59190613504565b90506124d181836134a5565b8a6060018181516124e291906134b8565b90525060408a0180518291906124f99083906134b8565b90525060808b01518290670de0b6b3a76400009061251790826134b8565b612521908c6134ed565b61252b9190613504565b61253591906134b8565b975050505b868860000181815161254c91906134b8565b9052506020880151670de0b6b3a76400009061256890896134ed565b6125729190613504565b89518a906125819083906134b8565b9052506080890151670de0b6b3a76400009061259d90896134ed565b6125a79190613504565b886040018181516125b891906134b8565b90525050505050509392505050565b73ffffffffffffffffffffffffffffffffffffffff821661262a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161090d565b806002600082825461263c91906134b8565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612757578181101561274a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161090d565b61275784848484036120ac565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166127e65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff821661286f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561290b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3612757565b60055473ffffffffffffffffffffffffffffffffffffffff1633146117c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161090d565b8151600090821115612a5f5760405162461bcd60e51b815260206004820152602260248201527f4d554c5449504f4f4c3a206173736574207175616e746974792065786365656460448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b670de0b6b3a7640000836020015183612a7891906134ed565b612a829190613504565b8451612a8e91906134a5565b15612dae5783516020840151845160009291612aa9916134ed565b612ab39190613504565b90506000670de0b6b3a7640000856020015185612ad091906134ed565b612ada9190613504565b8651612ae691906134a5565b60208601518651612af89087906134a5565b612b0291906134ed565b612b0c9190613504565b905060008660200151670de0b6b3a76400008760800151612b2d91906134ed565b612b379190613504565b90506000818311612b5157612b4c83836134a5565b612b5b565b612b5b82846134a5565b90506000828511612b7557612b7085846134a5565b612b7f565b612b7f83866134a5565b9050808211612c1e578015612be457600081612b9b84826134a5565b8a60600151612baa91906134ed565b612bb49190613504565b90508089606001818151612bc891906134a5565b90525060a08a018051829190612bdf9083906134b8565b905250505b6080890151612bfb90670de0b6b3a76400006134b8565b612c0d670de0b6b3a7640000896134ed565b612c179190613504565b9550612da4565b88606001518210612c715760405162461bcd60e51b815260206004820152601d60248201527f4d554c5449504f4f4c3a20646576696174696f6e206f766572666c6f77000000604482015260640161090d565b6000828a60600151612c8391906134a5565b8a60600151670de0b6b3a7640000858d60400151612ca191906134ed565b612cab91906134ed565b612cb59190613504565b612cbf9190613504565b60808b0151909150612cd982670de0b6b3a76400006134b8565b612ce391906134b8565b612cf5670de0b6b3a76400008a6134ed565b612cff9190613504565b96506000670de0b6b3a76400008b60800151670de0b6b3a7640000612d2491906134b8565b612d2e908a6134ed565b612d389190613504565b612d42908a6134a5565b90506000670de0b6b3a7640000828d60c00151612d5f91906134ed565b612d699190613504565b9050612d7581836134a5565b8b606001818151612d8691906134b8565b90525060408b018051829190612d9d9083906134b8565b9052505050505b5050505050612de4565b6080840151612dc590670de0b6b3a76400006134b8565b612dd7670de0b6b3a7640000846134ed565b612de19190613504565b90505b8183600001818151612df691906134a5565b9052506020830151670de0b6b3a764000090612e1290846134ed565b612e1c9190613504565b84518590612e2b9083906134a5565b9052506080840151670de0b6b3a764000090612e4790836134ed565b612e519190613504565b83604001818151612e6291906134b8565b9052509392505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216612f6c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156130085760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161221f565b600060208083528351808285015260005b818110156130985785810183015185820160400152820161307c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146130fb57600080fd5b919050565b6000806040838503121561311357600080fd5b61311c836130d7565b946020939093013593505050565b60008060006060848603121561313f57600080fd5b613148846130d7565b92506020840135915061315d604085016130d7565b90509250925092565b60008060006060848603121561317b57600080fd5b613184846130d7565b9250613192602085016130d7565b9150604084013590509250925092565b6000602082840312156131b457600080fd5b5035919050565b6000602082840312156131cd57600080fd5b610df2826130d7565b60405160e0810167ffffffffffffffff81118282101715613220577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b600060a0828403121561323857600080fd5b60405160a0810181811067ffffffffffffffff82111715613282577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b6000806000808486036101c08112156132d557600080fd5b8535945060e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561330957600080fd5b506133126131d6565b6020860135815260408601356020820152606086013560408201526080860135606082015260a0860135608082015260c086013560a082015260e086013560c082015280935050613367866101008701613226565b939692955092936101a00135925050565b6000806000806080858703121561338e57600080fd5b613397856130d7565b93506133a5602086016130d7565b9250604085013591506133ba606086016130d7565b905092959194509250565b600080604083850312156133d857600080fd5b6133e1836130d7565b91506133ef602084016130d7565b90509250929050565b60008060c0838503121561340b57600080fd5b6134158484613226565b91506133ef60a084016130d7565b600181811c9082168061343757607f821691505b602082108103613470577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156108b8576108b8613476565b808201808211156108b8576108b8613476565b6000602082840312156134dd57600080fd5b81518015158114610df257600080fd5b80820281158282048414176108b8576108b8613476565b60008261353a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561355157600080fd5b505191905056fea264697066735822122036b447bae0b493cd0e20b502fc3edb7bf249edb4942f6df57227438383f377a764736f6c6343000815003360806040523480156200001157600080fd5b50604051620013633803806200136383398101604081905262000034916200026b565b828260036200004483826200036c565b5060046200005382826200036c565b505050620000706200006a6200008560201b60201c565b62000089565b6200007c3382620000db565b50505062000460565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200014a919062000438565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ce57600080fd5b81516001600160401b0380821115620001eb57620001eb620001a6565b604051601f8301601f19908116603f01168101908282118183101715620002165762000216620001a6565b816040528381526020925086838588010111156200023357600080fd5b600091505b8382101562000257578582018301518183018401529082019062000238565b600093810190920192909252949350505050565b6000806000606084860312156200028157600080fd5b83516001600160401b03808211156200029957600080fd5b620002a787838801620001bc565b94506020860151915080821115620002be57600080fd5b50620002cd86828701620001bc565b925050604084015190509250925092565b600181811c90821680620002f357607f821691505b6020821081036200031457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a157600081815260208120601f850160051c81016020861015620003435750805b601f850160051c820191505b8181101562000364578281556001016200034f565b505050505050565b81516001600160401b03811115620003885762000388620001a6565b620003a081620003998454620002de565b846200031a565b602080601f831160018114620003d85760008415620003bf5750858301515b600019600386901b1c1916600185901b17855562000364565b600085815260208120601f198616915b828110156200040957888601518255948401946001909101908401620003e8565b5085821015620004285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200045a57634e487b7160e01b600052601160045260246000fd5b92915050565b610ef380620004706000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063dd62ed3e1461022b578063f2fde38b1461027157600080fd5b806370a0823114610197578063715018a6146101cd5780638da5cb5b146101d557806395d89b41146101fd57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610284565b60405161010f9190610ce0565b60405180910390f35b61012b610126366004610d75565b610316565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610d9f565b610330565b6040516012815260200161010f565b61012b61017d366004610d75565b610354565b610195610190366004610d75565b6103a0565b005b61013f6101a5366004610ddb565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610195610443565b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b610102610457565b61012b610213366004610d75565b610466565b61012b610226366004610d75565b610537565b61013f610239366004610dfd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61019561027f366004610ddb565b610545565b60606003805461029390610e30565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf90610e30565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b6000336103248185856105fc565b60019150505b92915050565b60003361033e8582856107af565b610349858585610886565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610324908290869061039b908790610e83565b6105fc565b60008111610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524332303a206d696e7420616d6f756e74206d75737420626520677265617460448201527f6572207468616e2030000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61043f8282610af5565b5050565b61044b610be8565b6104556000610c69565b565b60606004805461029390610e30565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161042c565b61034982868684036105fc565b600033610324818585610886565b61054d610be8565b73ffffffffffffffffffffffffffffffffffffffff81166105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b6105f981610c69565b50565b73ffffffffffffffffffffffffffffffffffffffff831661069e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff8216610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108805781811015610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161042c565b61088084848484036105fc565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff82166109cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610880565b73ffffffffffffffffffffffffffffffffffffffff8216610b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042c565b8060026000828254610b849190610e83565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610d0d57858101830151858201604001528201610cf1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d7057600080fd5b919050565b60008060408385031215610d8857600080fd5b610d9183610d4c565b946020939093013593505050565b600080600060608486031215610db457600080fd5b610dbd84610d4c565b9250610dcb60208501610d4c565b9150604084013590509250925092565b600060208284031215610ded57600080fd5b610df682610d4c565b9392505050565b60008060408385031215610e1057600080fd5b610e1983610d4c565b9150610e2760208401610d4c565b90509250929050565b600181811c90821680610e4457607f821691505b602082108103610e7d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561032a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220dfabb57559a54aea75522d1e6b996c98d7cd1494bb519f233ae9d46a2a2d3cf864736f6c63430008150033a26469706673582212206bd0192a7d64e7ac56f7673b5d834de63ecec49ff5bc6379c9fbc3126efdd78c64736f6c63430008150033",
    "sourceMap": "276:1256:25:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;276:1256:25;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000f15760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa91462000188578063ba414fa61462000192578063e20c9f7114620001ad578063fa7626d414620001b757600080fd5b806385226c81146200015b578063916a17c614620001745780639fbee575146200017e57600080fd5b80633e5e3c2311620000cc5780633e5e3c23146200012e5780633f7286f4146200013857806366d9a9a0146200014257600080fd5b80630a9254e414620000f65780631c9085fd14620001025780631ed7831c146200010c575b600080fd5b62000100620001c5565b005b620001006200054c565b6200011662000b6f565b604051620001259190620015ac565b60405180910390f35b6200011662000be0565b6200011662000c4f565b6200014c62000cbe565b60405162000125919062001608565b6200016562000dd3565b60405162000125919062001774565b6200014c62000ead565b6200010062000fb9565b620001656200115d565b6200019c62001237565b604051901515815260200162000125565b62000116620013a1565b6000546200019c9060ff1681565b6004601e819055601f55604051620001dd9062001590565b60408082526004908201527f4e616d650000000000000000000000000000000000000000000000000000000060608201526080602082018190526006908201527f53594d424f4c000000000000000000000000000000000000000000000000000060a082015260c001604051809103906000f08015801562000263573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905560005b601e548110156200035f57601c6000604051620002c9906200159e565b620002d59190620017f8565b604051809103906000f080158015620002f2573d6000803e3d6000fd5b5081546001810183556000928352602090922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905580620003568162001882565b915050620002ac565b5060005b601f548110156200040957601d6200039d826040516020016200038891815260200190565b60405160208183030381529060405262001410565b81546001810183556000928352602090922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905580620004008162001882565b91505062000363565b5060005b601f54811015620005495760005b601e548110156200053357601c81815481106200043c576200043c620018e2565b600091825260209091200154601d805473ffffffffffffffffffffffffffffffffffffffff909216916340c10f199190859081106200047f576200047f620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff90911660048201526b204fce5e3e250261100000006024820152604401600060405180830381600087803b1580156200050457600080fd5b505af115801562000519573d6000803e3d6000fd5b5050505080806200052a9062001882565b9150506200041b565b5080620005408162001882565b9150506200040d565b50565b601d8054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa7916000906200057e576200057e620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b158015620005f157600080fd5b505af115801562000606573d6000803e3d6000fd5b50505050601c600081548110620006215762000621620018e2565b600091825260209091200154601b546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152678ac7230489e80000602482015291169063a9059cbb906044016020604051808303816000875af1158015620006ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006d3919062001911565b506040517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f20707269636500000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b1580156200076857600080fd5b505af11580156200077d573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169350630d4d1513925090600090620007ba57620007ba620018e2565b6000918252602082200154601d805473ffffffffffffffffffffffffffffffffffffffff90921692678ac7230489e8000092620007fb57620007fb620018e2565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019290925291909116604482015260640160408051808303816000875af115801562000883573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a991906200193c565b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169163132bc3869190600090620008e457620008e4620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152600a6024820152604401600060405180830381600087803b1580156200095e57600080fd5b505af115801562000973573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff909216935063457972de925090600090620009b057620009b0620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152600a6024820152604401600060405180830381600087803b15801562000a2a57600080fd5b505af115801562000a3f573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff9092169350630d4d151392509060009062000a7c5762000a7c620018e2565b6000918252602082200154601d805473ffffffffffffffffffffffffffffffffffffffff90921692678ac7230489e800009262000abd5762000abd620018e2565b60009182526020909120015460405160e085901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9384166004820152602481019290925291909116604482015260640160408051808303816000875af115801562000b45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6b91906200193c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000bd657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000db157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000d5d5790505b5050505050815250508152602001906001019062000ce2565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57838290600052602060002001805462000e199062001961565b80601f016020809104026020016040519081016040528092919081815260200182805462000e479062001961565b801562000e985780601f1062000e6c5761010080835404028352916020019162000e98565b820191906000526020600020905b81548152906001019060200180831162000e7a57829003601f168201915b50505050508152602001906001019062000df7565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000dca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000fa057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000f4c5790505b5050505050815250508152602001906001019062000ed1565b601d8054737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ca669fa79160009062000feb5762000feb620018e2565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156200105e57600080fd5b505af115801562001073573d6000803e3d6000fd5b50506040517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f20707269636500000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063f28dceb39150606401600060405180830381600087803b1580156200110b57600080fd5b505af115801562001120573d6000803e3d6000fd5b5050601b54601c805473ffffffffffffffffffffffffffffffffffffffff909216935063b8ce670d92509060009062000a7c5762000a7c620018e2565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000dca578382906000526020600020018054620011a39062001961565b80601f0160208091040260200160405190810160405280929190818152602001828054620011d19062001961565b8015620012225780601f10620011f65761010080835404028352916020019162001222565b820191906000526020600020905b8154815290600101906020018083116200120457829003601f168201915b50505050508152602001906001019062001181565b60008054610100900460ff1615620012585750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200139c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162001300917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620019b6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526200133a9162001a00565b6000604051808303816000865af19150503d806000811462001379576040519150601f19603f3d011682016040523d82523d6000602084013e6200137e565b606091505b509150508080602001905181019062001398919062001911565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000bd65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000baa575050505050905090565b60006200141d8262001424565b5092915050565b600080826040516020016200143a919062001a00565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620014da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001500919062001a1e565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062001557908590879060040162001a56565b600060405180830381600087803b1580156200157257600080fd5b505af115801562001587573d6000803e3d6000fd5b50505050915091565b6139188062001a9083390190565b61136380620053a883390190565b6020808252825182820181905260009190848201906040850190845b81811015620015fc57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101620015c8565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620016f3578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620016dd5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062001699565b50978a0197955050509187019160010162001630565b50919998505050505050505050565b60005b838110156200171f57818101518382015260200162001705565b50506000910152565b600081518084526200174281602086016020860162001702565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620017eb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452620017d885835162001728565b945092850192908501906001016200179b565b5092979650505050505050565b6060815260006200183660608301600581527f746f6b656e000000000000000000000000000000000000000000000000000000602082015260400190565b82810360208401526200187381600581527f746f6b656e000000000000000000000000000000000000000000000000000000602082015260400190565b91505082604083015292915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620018db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156200192457600080fd5b815180151581146200193557600080fd5b9392505050565b600080604083850312156200195057600080fd5b505080516020909101519092909150565b600181811c908216806200197657607f821691505b602082108103620019b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620019f281600485016020870162001702565b919091016004019392505050565b6000825162001a1481846020870162001702565b9190910192915050565b60006020828403121562001a3157600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146200193557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062001a87604083018462001728565b94935050505056fe60806040523480156200001157600080fd5b5060405162003918380380620039188339810160408190526200003491620001b5565b81816003620000448382620002ae565b506004620000538282620002ae565b505050620000706200006a6200009a60201b60201c565b6200009e565b505060108054336001600160a01b031991821681179092556011805490911690911790556200037a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011857600080fd5b81516001600160401b0380821115620001355762000135620000f0565b604051601f8301601f19908116603f01168101908282118183101715620001605762000160620000f0565b816040528381526020925086838588010111156200017d57600080fd5b600091505b83821015620001a1578582018301518183018401529082019062000182565b600093810190920192909252949350505050565b60008060408385031215620001c957600080fd5b82516001600160401b0380821115620001e157600080fd5b620001ef8683870162000106565b935060208501519150808211156200020657600080fd5b50620002158582860162000106565b9150509250929050565b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a957600081815260208120601f850160051c81016020861015620002845750805b601f850160051c820191505b81811015620002a55782815560010162000290565b5050505b505050565b81516001600160401b03811115620002ca57620002ca620000f0565b620002e281620002db84546200021f565b846200025b565b602080601f8311600181146200031a5760008415620003015750858301515b600019600386901b1c1916600185901b178555620002a5565b600085815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61358e806200038a6000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c806371bff8c5116101a7578063bda53107116100ee578063ea2347c811610097578063f2fde38b11610071578063f2fde38b146107e3578063f474c780146107f6578063f70210ea1461080957600080fd5b8063ea2347c81461076c578063ecc777bc14610775578063f11b81881461077e57600080fd5b8063e165677d116100c8578063e165677d1461073d578063e2ceddac14610746578063e68defac1461075957600080fd5b8063bda53107146106dc578063dd62ed3e146106ef578063dd68d8db1461073557600080fd5b806395d89b4111610150578063a9059cbb1161012a578063a9059cbb14610696578063b3f00674146106a9578063b8ce670d146106c957600080fd5b806395d89b41146106685780639f7a417114610670578063a457c2d71461068357600080fd5b8063887c70dd11610181578063887c70dd1461061b5780638da5cb5b1461063b578063918f86741461065957600080fd5b806371bff8c5146105a0578063742978da146105b3578063753045201461060857600080fd5b80633429d5221161026b5780635edf79f4116102145780636e81221c116101ee5780636e81221c1461052f57806370a0823114610562578063715018a61461059857600080fd5b80635edf79f414610501578063677122a4146105145780636ddca2101461052757600080fd5b806342afdb271161024557806342afdb27146104d2578063457972de146104e5578063582bee14146104f857600080fd5b80633429d5221461045857806339509351146104b65780633d463584146104c957600080fd5b806318160ddd116102cd57806325b5c6e3116102a757806325b5c6e3146104235780632b77dc0314610436578063313ce5671461044957600080fd5b806318160ddd146103c357806320531bc9146103cb57806323b872dd1461041057600080fd5b80630d18d036116102fe5780630d18d0361461037d5780630d4d151314610386578063132bc386146103ae57600080fd5b806306fdde031461032557806307ebdb2e14610343578063095ea7b31461035a575b600080fd5b61032d610812565b60405161033a919061306b565b60405180910390f35b61034c600e5481565b60405190815260200161033a565b61036d610368366004613100565b6108a4565b604051901515815260200161033a565b61034c600b5481565b61039961039436600461312a565b6108be565b6040805192835260208301919091520161033a565b6103c16103bc366004613100565b610c5b565b005b60025461034c565b6010546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161033a565b61036d61041e366004613166565b610dd3565b6103c16104313660046131a2565b610df9565b6103c16104443660046131bb565b610e3d565b6040516012815260200161033a565b610460610eb8565b60405161033a9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61036d6104c4366004613100565b610f08565b61034c60085481565b6103c16104e03660046131a2565b610f54565b6103c16104f3366004613100565b610f91565b61034c60095481565b6103c161050f3660046131a2565b61113f565b61034c6105223660046132bd565b61117c565b6104606111d4565b61054261053d366004613378565b61121f565b60408051948552602085019390935291830152606082015260800161033a565b61034c6105703660046131bb565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6103c16117af565b6103c16105ae3660046131a2565b6117c3565b6105c66105c13660046131bb565b611800565b60405161033a9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6103c16106163660046133c5565b611897565b6011546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60055473ffffffffffffffffffffffffffffffffffffffff166103eb565b61034c670de0b6b3a764000081565b61032d6119aa565b6103c161067e3660046131a2565b6119b9565b61036d610691366004613100565b6119f6565b61036d6106a4366004613100565b611ab8565b600f546103eb9073ffffffffffffffffffffffffffffffffffffffff1681565b6103996106d736600461312a565b611ac6565b6103c16106ea3660046131bb565b611dca565b61034c6106fd3660046133c5565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b610460611e45565b61034c600a5481565b61034c6107543660046133f8565b611e90565b6104606107673660046131a2565b611f4d565b61034c600d5481565b61034c60075481565b6107bb61078c3660046131bb565b600660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a00161033a565b6103c16107f13660046131bb565b611fd2565b6103c16108043660046131a2565b61206f565b61034c600c5481565b60606003805461082190613423565b80601f016020809104026020016040519081016040528092919081815260200182805461084d90613423565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b5050505050905090565b6000336108b28185856120ac565b60019150505b92915050565b600080836000036109165760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f207368617265000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660209081526040808320815160a0810183528154815260018201549381018490526002820154928101929092526003810154606083015260040154608082015291036109c25760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2070726963650000000000000000000000604482015260640161090d565b8060800151600003610a165760405162461bcd60e51b815260206004820152601760248201527f4d554c5449504f4f4c3a207a65726f2070657263656e74000000000000000000604482015260640161090d565b6000610a23600c54611f4d565b90506000610a318389611e90565b90506000610a3e60025490565b600003610a4b5781610a58565b610a58888486600061117c565b9050610a6583858361222c565b955081861115610add5760405162461bcd60e51b815260206004820152602160248201527f4d554c5449504f4f4c3a206d696e7420616d6f756e7420696e2065786565646560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b825160075560a08301519450600085610af688856134a5565b610b0091906134b8565b9050610b0c888a6125c7565b73ffffffffffffffffffffffffffffffffffffffff8a16600090815260066020908152604091829020875181559087015160018201559086015160028201556060860151600382015560808601516004909101558015610c01576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152602482018390528b169063a9059cbb906044016020604051808303816000875af1158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff91906134cb565b505b845160405190815273ffffffffffffffffffffffffffffffffffffffff8b16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a25050505050935093915050565b60115473ffffffffffffffffffffffffffffffffffffffff163314610cc25760405162461bcd60e51b815260206004820152601f60248201527f4d554c5449504f4f4c3a206f6e6c792070657263656e74732073657474657200604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082018190526008548391610d34916134a5565b610d3e91906134b8565b6008556080810182815273ffffffffffffffffffffffffffffffffffffffff8416600081815260066020908152604091829020855181558186015160018201558286015160028201556060860151600382015593516004909401939093555184815290917feddaf9a054fe5ebd155e55ca4e1442c849a15fcdb5ceae0e5cc41338e7967ba891015b60405180910390a2505050565b600033610de18582856126a0565b610dec85858561275d565b60019150505b9392505050565b610e0161297e565b600c8190556040518181527faa3e0a46af827fa4016b300eeeb164f0ba70f8cd67066aac8cfe0d139e3fed3c906020015b60405180910390a150565b610e4561297e565b601180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f5e55141d8a32e5d91733243e0f44e7346cb25138cfdc5b0e888bb6d9cb75f98b90602001610e32565b610ef86040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600d54611f4d565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906108b29082908690610f4f9087906134b8565b6120ac565b610f5c61297e565b600b8190556040518181527fd52e2e0d2193bde49ac3490f3950077ccdcb07356f5b7d3b0698846de6fb99af90602001610e32565b60105473ffffffffffffffffffffffffffffffffffffffff163314610ff85760405162461bcd60e51b815260206004820152601c60248201527f4d554c5449504f4f4c3a206f6e6c792070726963652073657474657200000000604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a081018452815480825260018301549382019390935260028201549381019390935260038101546060840152600401546080830152670de0b6b3a76400009061106e9084906134ed565b6110789190613504565b60208201518251670de0b6b3a764000091611092916134ed565b61109c9190613504565b6007546110a991906134a5565b6110b391906134b8565b600755602081810183815273ffffffffffffffffffffffffffffffffffffffff85166000818152600684526040908190208551815592516001840155808501516002840155606085015160038401556080850151600490930192909255905184815290917fe36d0063be3f369ddabba6d2343d37d5dff081050a7be61867fc42cfdeda85f59101610dc6565b61114761297e565b60098190556040518181527fbf579fd018eba5b424b00da7c3ace7787a8925ad1ff435a6ae57f0f3be66b02c90602001610e32565b600082602001518261118d60025490565b61119791906134b8565b8551670de0b6b3a7640000906111ad90896134ed565b6111b791906134ed565b6111c19190613504565b6111cb9190613504565b95945050505050565b6112146040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600c54611f4d565b6000806000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036112a05760405162461bcd60e51b815260206004820152601660248201527f4d554c5449504f4f4c3a2073616d652061737365747300000000000000000000604482015260640161090d565b6000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060006113ad600e54611f4d565b905060006113bb848d611e90565b905060006113cc8b8487600061117c565b90506113d983868361222c565b98508189111561142b5760405162461bcd60e51b815260206004820152601c60248201527f4d554c5449504f4f4c3a20616d6f756e7420696e206578656564656400000000604482015260640161090d565b5060a08201805160009182905296506114468b84868261117c565b90506114538385836129e5565b97508260a00151955082600001516007819055505083600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015590505082600660008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506000858861156091906134b8565b11156116235773ffffffffffffffffffffffffffffffffffffffff8b1663a9059cbb8a61158d888b6134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162191906134cb565b505b600061162f89836134a5565b61163990886134b8565b11156117065773ffffffffffffffffffffffffffffffffffffffff8c1663a9059cbb8a6116668b856134a5565b611670908a6134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170491906134cb565b505b835160405190815273ffffffffffffffffffffffffffffffffffffffff8d16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a2825160405190815273ffffffffffffffffffffffffffffffffffffffff8c16907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a250505050945094509450949050565b6117b761297e565b6117c16000612e6c565b565b6117cb61297e565b600a8190556040518181527fc260294de91f63c2935a5b9f966443a3ff51b35068e16661d55211504de3d86490602001610e32565b6118326040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260066020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b61189f61297e565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526006602052604080822060028101805493905590517fa9059cbb0000000000000000000000000000000000000000000000000000000081529385166004850152602484018290529290919063a9059cbb906044016020604051808303816000875af115801561192f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195391906134cb565b508373ffffffffffffffffffffffffffffffffffffffff167f0ff8fb19717c1e3aa6ab438071b1fab0a6143353cd8b5224741cc0656cf5305b8260405161199c91815260200190565b60405180910390a250505050565b60606004805461082190613423565b6119c161297e565b600d8190556040518181527f8779c4ca044dfeafa1290475dd75fe21d2256f66f4a067b1dcf62dab5a7729ea90602001610e32565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015611aa05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161090d565b611aad82868684036120ac565b506001949350505050565b6000336108b281858561275d565b60008083600003611b195760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2073686172650000000000000000000000604482015260640161090d565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600660209081526040808320815160a081018352815481526001820154938101849052600282015492810192909252600381015460608301526004015460808201529103611bc55760405162461bcd60e51b815260206004820152601560248201527f4d554c5449504f4f4c3a207a65726f2070726963650000000000000000000000604482015260640161090d565b8060800151600003611c195760405162461bcd60e51b815260206004820152601760248201527f4d554c5449504f4f4c3a207a65726f2070657263656e74000000000000000000604482015260640161090d565b6000611c26600d54611f4d565b90506000611c37878385600061117c565b9050611c448284836129e5565b825160075560a08301519095509350611c5d3088612ee3565b73ffffffffffffffffffffffffffffffffffffffff88166000818152600660209081526040918290208651815590860151600182015590850151600282015560608501516003820155608085015160049091015563a9059cbb87611cc187896134b8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5591906134cb565b5030600081815260208190526040902054611d729190889061275d565b825160405190815273ffffffffffffffffffffffffffffffffffffffff8916907ff1adebc72eb4ba11828091d3fa926b67e364f2407a4eea38c090e350290cce989060200160405180910390a2505050935093915050565b611dd261297e565b601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f0be4a9fa8ca97505525c993411db321f6e9aa3174f2cefa1884f17025b8eaabc90602001610e32565b611e856040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610f03600e54611f4d565b6060820151604080840151845191517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600093929073ffffffffffffffffffffffffffffffffffffffff8616906370a0823190602401602060405180830381865afa158015611f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2f919061353f565b611f3991906134a5565b611f4391906134a5565b610df291906134a5565b611f8d6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600754815260200160085481526020016009548152602001600a54815260200183815260200160008152602001600b548152509050919050565b611fda61297e565b73ffffffffffffffffffffffffffffffffffffffff81166120635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161090d565b61206c81612e6c565b50565b61207761297e565b600e8190556040518181527f14a9aef9e0be2aa631df9028cf396b63ced8fe9e2fe7e9062d29325dca5f925690602001610e32565b73ffffffffffffffffffffffffffffffffffffffff83166121345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff82166121bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b8251600090810361227857670de0b6b3a764000083602001518361225091906134ed565b61225a9190613504565b845282518290849061226d9083906134b8565b905250819050610df2565b8351602084015184516000929161228e916134ed565b6122989190613504565b90506000670de0b6b3a76400008560200151856122b591906134ed565b6122bf9190613504565b86516122cb91906134b8565b602086015186516122dd9087906134b8565b6122e791906134ed565b6122f19190613504565b905060008660200151670de0b6b3a7640000876080015161231291906134ed565b61231c9190613504565b905060008183116123365761233183836134a5565b612340565b61234082846134a5565b9050600082851161235a5761235585846134a5565b612364565b61236483866134a5565b90508082116124055780156123c95760008161238084826134a5565b8a6060015161238f91906134ed565b6123999190613504565b905080896060018181516123ad91906134a5565b90525060a08a0180518291906123c49083906134b8565b905250505b670de0b6b3a76400008960800151670de0b6b3a76400006123ea91906134b8565b6123f490896134ed565b6123fe9190613504565b955061253a565b886060015182106124585760405162461bcd60e51b815260206004820152601d60248201527f4d554c5449504f4f4c3a20646576696174696f6e206f766572666c6f77000000604482015260640161090d565b6000828a6060015161246a91906134a5565b8a6060015189858d6040015161248091906134ed565b61248a91906134ed565b6124949190613504565b61249e9190613504565b90506000670de0b6b3a7640000828c60c001516124bb91906134ed565b6124c59190613504565b90506124d181836134a5565b8a6060018181516124e291906134b8565b90525060408a0180518291906124f99083906134b8565b90525060808b01518290670de0b6b3a76400009061251790826134b8565b612521908c6134ed565b61252b9190613504565b61253591906134b8565b975050505b868860000181815161254c91906134b8565b9052506020880151670de0b6b3a76400009061256890896134ed565b6125729190613504565b89518a906125819083906134b8565b9052506080890151670de0b6b3a76400009061259d90896134ed565b6125a79190613504565b886040018181516125b891906134b8565b90525050505050509392505050565b73ffffffffffffffffffffffffffffffffffffffff821661262a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161090d565b806002600082825461263c91906134b8565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612757578181101561274a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161090d565b61275784848484036120ac565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166127e65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff821661286f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561290b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3612757565b60055473ffffffffffffffffffffffffffffffffffffffff1633146117c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161090d565b8151600090821115612a5f5760405162461bcd60e51b815260206004820152602260248201527f4d554c5449504f4f4c3a206173736574207175616e746974792065786365656460448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b670de0b6b3a7640000836020015183612a7891906134ed565b612a829190613504565b8451612a8e91906134a5565b15612dae5783516020840151845160009291612aa9916134ed565b612ab39190613504565b90506000670de0b6b3a7640000856020015185612ad091906134ed565b612ada9190613504565b8651612ae691906134a5565b60208601518651612af89087906134a5565b612b0291906134ed565b612b0c9190613504565b905060008660200151670de0b6b3a76400008760800151612b2d91906134ed565b612b379190613504565b90506000818311612b5157612b4c83836134a5565b612b5b565b612b5b82846134a5565b90506000828511612b7557612b7085846134a5565b612b7f565b612b7f83866134a5565b9050808211612c1e578015612be457600081612b9b84826134a5565b8a60600151612baa91906134ed565b612bb49190613504565b90508089606001818151612bc891906134a5565b90525060a08a018051829190612bdf9083906134b8565b905250505b6080890151612bfb90670de0b6b3a76400006134b8565b612c0d670de0b6b3a7640000896134ed565b612c179190613504565b9550612da4565b88606001518210612c715760405162461bcd60e51b815260206004820152601d60248201527f4d554c5449504f4f4c3a20646576696174696f6e206f766572666c6f77000000604482015260640161090d565b6000828a60600151612c8391906134a5565b8a60600151670de0b6b3a7640000858d60400151612ca191906134ed565b612cab91906134ed565b612cb59190613504565b612cbf9190613504565b60808b0151909150612cd982670de0b6b3a76400006134b8565b612ce391906134b8565b612cf5670de0b6b3a76400008a6134ed565b612cff9190613504565b96506000670de0b6b3a76400008b60800151670de0b6b3a7640000612d2491906134b8565b612d2e908a6134ed565b612d389190613504565b612d42908a6134a5565b90506000670de0b6b3a7640000828d60c00151612d5f91906134ed565b612d699190613504565b9050612d7581836134a5565b8b606001818151612d8691906134b8565b90525060408b018051829190612d9d9083906134b8565b9052505050505b5050505050612de4565b6080840151612dc590670de0b6b3a76400006134b8565b612dd7670de0b6b3a7640000846134ed565b612de19190613504565b90505b8183600001818151612df691906134a5565b9052506020830151670de0b6b3a764000090612e1290846134ed565b612e1c9190613504565b84518590612e2b9083906134a5565b9052506080840151670de0b6b3a764000090612e4790836134ed565b612e519190613504565b83604001818151612e6291906134b8565b9052509392505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216612f6c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156130085760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161090d565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161221f565b600060208083528351808285015260005b818110156130985785810183015185820160400152820161307c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146130fb57600080fd5b919050565b6000806040838503121561311357600080fd5b61311c836130d7565b946020939093013593505050565b60008060006060848603121561313f57600080fd5b613148846130d7565b92506020840135915061315d604085016130d7565b90509250925092565b60008060006060848603121561317b57600080fd5b613184846130d7565b9250613192602085016130d7565b9150604084013590509250925092565b6000602082840312156131b457600080fd5b5035919050565b6000602082840312156131cd57600080fd5b610df2826130d7565b60405160e0810167ffffffffffffffff81118282101715613220577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b600060a0828403121561323857600080fd5b60405160a0810181811067ffffffffffffffff82111715613282577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b6000806000808486036101c08112156132d557600080fd5b8535945060e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561330957600080fd5b506133126131d6565b6020860135815260408601356020820152606086013560408201526080860135606082015260a0860135608082015260c086013560a082015260e086013560c082015280935050613367866101008701613226565b939692955092936101a00135925050565b6000806000806080858703121561338e57600080fd5b613397856130d7565b93506133a5602086016130d7565b9250604085013591506133ba606086016130d7565b905092959194509250565b600080604083850312156133d857600080fd5b6133e1836130d7565b91506133ef602084016130d7565b90509250929050565b60008060c0838503121561340b57600080fd5b6134158484613226565b91506133ef60a084016130d7565b600181811c9082168061343757607f821691505b602082108103613470577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156108b8576108b8613476565b808201808211156108b8576108b8613476565b6000602082840312156134dd57600080fd5b81518015158114610df257600080fd5b80820281158282048414176108b8576108b8613476565b60008261353a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561355157600080fd5b505191905056fea264697066735822122036b447bae0b493cd0e20b502fc3edb7bf249edb4942f6df57227438383f377a764736f6c6343000815003360806040523480156200001157600080fd5b50604051620013633803806200136383398101604081905262000034916200026b565b828260036200004483826200036c565b5060046200005382826200036c565b505050620000706200006a6200008560201b60201c565b62000089565b6200007c3382620000db565b50505062000460565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200014a919062000438565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ce57600080fd5b81516001600160401b0380821115620001eb57620001eb620001a6565b604051601f8301601f19908116603f01168101908282118183101715620002165762000216620001a6565b816040528381526020925086838588010111156200023357600080fd5b600091505b8382101562000257578582018301518183018401529082019062000238565b600093810190920192909252949350505050565b6000806000606084860312156200028157600080fd5b83516001600160401b03808211156200029957600080fd5b620002a787838801620001bc565b94506020860151915080821115620002be57600080fd5b50620002cd86828701620001bc565b925050604084015190509250925092565b600181811c90821680620002f357607f821691505b6020821081036200031457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a157600081815260208120601f850160051c81016020861015620003435750805b601f850160051c820191505b8181101562000364578281556001016200034f565b505050505050565b81516001600160401b03811115620003885762000388620001a6565b620003a081620003998454620002de565b846200031a565b602080601f831160018114620003d85760008415620003bf5750858301515b600019600386901b1c1916600185901b17855562000364565b600085815260208120601f198616915b828110156200040957888601518255948401946001909101908401620003e8565b5085821015620004285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200045a57634e487b7160e01b600052601160045260246000fd5b92915050565b610ef380620004706000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063dd62ed3e1461022b578063f2fde38b1461027157600080fd5b806370a0823114610197578063715018a6146101cd5780638da5cb5b146101d557806395d89b41146101fd57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610284565b60405161010f9190610ce0565b60405180910390f35b61012b610126366004610d75565b610316565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610d9f565b610330565b6040516012815260200161010f565b61012b61017d366004610d75565b610354565b610195610190366004610d75565b6103a0565b005b61013f6101a5366004610ddb565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610195610443565b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b610102610457565b61012b610213366004610d75565b610466565b61012b610226366004610d75565b610537565b61013f610239366004610dfd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61019561027f366004610ddb565b610545565b60606003805461029390610e30565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf90610e30565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b6000336103248185856105fc565b60019150505b92915050565b60003361033e8582856107af565b610349858585610886565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610324908290869061039b908790610e83565b6105fc565b60008111610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524332303a206d696e7420616d6f756e74206d75737420626520677265617460448201527f6572207468616e2030000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61043f8282610af5565b5050565b61044b610be8565b6104556000610c69565b565b60606004805461029390610e30565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161042c565b61034982868684036105fc565b600033610324818585610886565b61054d610be8565b73ffffffffffffffffffffffffffffffffffffffff81166105f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b6105f981610c69565b50565b73ffffffffffffffffffffffffffffffffffffffff831661069e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff8216610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108805781811015610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161042c565b61088084848484036105fc565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff82166109cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161042c565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610880565b73ffffffffffffffffffffffffffffffffffffffff8216610b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042c565b8060026000828254610b849190610e83565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610d0d57858101830151858201604001528201610cf1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d7057600080fd5b919050565b60008060408385031215610d8857600080fd5b610d9183610d4c565b946020939093013593505050565b600080600060608486031215610db457600080fd5b610dbd84610d4c565b9250610dcb60208501610d4c565b9150604084013590509250925092565b600060208284031215610ded57600080fd5b610df682610d4c565b9392505050565b60008060408385031215610e1057600080fd5b610e1983610d4c565b9150610e2760208401610d4c565b90509250929050565b600181811c90821680610e4457607f821691505b602082108103610e7d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561032a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220dfabb57559a54aea75522d1e6b996c98d7cd1494bb519f233ae9d46a2a2d3cf864736f6c63430008150033a26469706673582212206bd0192a7d64e7ac56f7673b5d834de63ecec49ff5bc6379c9fbc3126efdd78c64736f6c63430008150033",
    "sourceMap": "276:1256:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:519;;;:::i;:::-;;946:391;;;:::i;2170:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2939:133;;;:::i;2640:141::-;;;:::i;2456:178::-;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1343:187:25:-;;;:::i;1875:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;4022:14:26;;4015:22;3997:41;;3985:2;3970:18;1819:584:0;3857:187:26;2022:142:6;;;:::i;1572:26:0:-;;;;;;;;;421:519:25;466:1;455:8;:12;;;477:7;:11;512:31;;;;;:::i;:::-;4352:2:26;4334:21;;;4391:1;4371:18;;;4364:29;4429:6;4424:2;4409:18;;4402:34;4474:3;4467:4;4452:20;;4445:33;;;4515:1;4494:19;;;4487:30;4554:8;4548:3;4533:19;;4526:37;4595:3;4580:19;512:31:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:2:25;:36;;;;;;;;;;;;;;;-1:-1:-1;553:104:25;570:8;;566:1;:12;553:104;;;599:6;643:1;611:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:47:25;;;;;;;-1:-1:-1;599:47:25;;;;;;;;;;;;;;;;;;;;;;;;580:3;;;;:::i;:::-;;;;553:104;;;;671:6;666:99;683:7;;679:1;:11;666:99;;;711:5;722:31;749:1;738:13;;;;;;5849:25:26;;5837:2;5822:18;;5703:177;738:13:25;;;;;;;;;;;;;722:8;:31::i;:::-;711:43;;;;;;;-1:-1:-1;711:43:25;;;;;;;;;;;;;;;;;;;;;;;;692:3;;;;:::i;:::-;;;;666:99;;;;779:6;774:160;791:7;;787:1;:11;774:160;;;824:6;819:105;836:8;;832:1;:12;819:105;;;869:6;876:1;869:9;;;;;;;;:::i;:::-;;;;;;;;;;;884:5;:8;;869:9;;;;;:14;;884:5;890:1;;884:8;;;;;;:::i;:::-;;;;;;;;;;;869:40;;;;;;;;;;884:8;;;;869:40;;;6284:74:26;894:14:25;6374:18:26;;;6367:34;6257:18;;869:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:3;;;;;:::i;:::-;;;;819:105;;;-1:-1:-1;800:3:25;;;;:::i;:::-;;;;774:160;;;;421:519::o;946:391::-;1013:5;:8;;1004;;;;309:37:1;;1013:8:25;;;;:::i;:::-;;;;;;;;;;;1004:18;;;;;;;;;;1013:8;;;;1004:18;;;6558:74:26;6531:18;;1004::25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:6;1039:1;1032:9;;;;;;;;:::i;:::-;;;;;;;;;;;1059:2;;1032:38;;;;;:9;1059:2;;;1032:38;;;6284:74:26;1064:5:25;6374:18:26;;;6367:34;1032:9:25;;;:18;;6257::26;;1032:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1080:40:25;;;;;7455:2:26;1080:40:25;;;7437:21:26;7494:2;7474:18;;;7467:30;7533:23;7513:18;;;7506:51;1080:15:25;;;;7574:18:26;;1080:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1130:2:25;;1146:6;:9;;1130:2;;;;;-1:-1:-1;1130:7:25;;-1:-1:-1;1146:6:25;1130:2;;1146:9;;;;:::i;:::-;;;;;;;;;;1165:5;:8;;1146:9;;;;;1158:5;;1165:8;;;;:::i;:::-;;;;;;;;;;;1130:44;;;;;;;;;;1165:8;7911:15:26;;;1130:44:25;;;7893:34:26;7943:18;;;7936:34;;;;1165:8:25;;;;7986:18:26;;;7979:43;7805:18;;1130:44:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1184:2:25;;1213:6;:9;;1184:2;;;;;:20;;1213:6;1184:2;;1213:9;;;;:::i;:::-;;;;;;;;;;;1184:44;;;;;;;;;;1213:9;;;;1184:44;;;6284:74:26;1225:2:25;6374:18:26;;;6367:34;6257:18;;1184:44:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1238:2:25;;1261:6;:9;;1238:2;;;;;-1:-1:-1;1238:14:25;;-1:-1:-1;1261:6:25;1238:2;;1261:9;;;;:::i;:::-;;;;;;;;;;;1238:38;;;;;;;;;;1261:9;;;;1238:38;;;6284:74:26;1273:2:25;6374:18:26;;;6367:34;6257:18;;1238:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1286:2:25;;1302:6;:9;;1286:2;;;;;-1:-1:-1;1286:7:25;;-1:-1:-1;1302:6:25;1286:2;;1302:9;;;;:::i;:::-;;;;;;;;;;1321:5;:8;;1302:9;;;;;1314:5;;1321:8;;;;:::i;:::-;;;;;;;;;;;1286:44;;;;;;;;;;1321:8;7911:15:26;;;1286:44:25;;;7893:34:26;7943:18;;;7936:34;;;;1321:8:25;;;;7986:18:26;;;7979:43;7805:18;;1286:44:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;946:391::o;2170:134:6:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2939:133::-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2456:178::-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:187:25;1410:5;:8;;1401;;;;309:37:1;;1410:8:25;;;;:::i;:::-;;;;;;;;;;;1401:18;;;;;;;;;;1410:8;;;;1401:18;;;6558:74:26;6531:18;;1401::25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1429:40:25;;;;;7455:2:26;1429:40:25;;;7437:21:26;7494:2;7474:18;;;7467:30;7533:23;7513:18;;;7506:51;1429:15:25;;-1:-1:-1;1429:15:25;;-1:-1:-1;7574:18:26;;1429:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1479:2:25;;1495:6;:9;;1479:2;;;;;-1:-1:-1;1479:7:25;;-1:-1:-1;1495:6:25;1479:2;;1495:9;;;;:::i;1875:141:6:-;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6284:74:26;;;2221:17:0;6374:18:26;;;6367:34;2196:43:0;;;;;;;;;6257:18:26;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2022:142:6:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;20288:125:4:-;20352:12;20386:20;20401:4;20386:14;:20::i;:::-;-1:-1:-1;20376:30:4;20288:125;-1:-1:-1;;20288:125:4:o;20007:242::-;20077:12;20091:18;20169:4;20152:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;20142:33;;20152:22;20142:33;;;;20193:19;;;;;;5849:25:26;;;20142:33:4;-1:-1:-1;20193:7:4;;;;5822:18:26;;20193:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20222:20;;;;;20186:26;;-1:-1:-1;20222:8:4;;;;:20;;20186:26;;20237:4;;20222:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20007:242;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:681:26:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:26;;14:681;-1:-1:-1;;;;;;14:681:26:o;700:1695::-;902:4;931:2;971;960:9;956:18;1001:2;990:9;983:21;1024:6;1059;1053:13;1090:6;1082;1075:22;1116:2;1106:12;;1149:2;1138:9;1134:18;1127:25;;1211:2;1201:6;1198:1;1194:14;1183:9;1179:30;1175:39;1249:2;1241:6;1237:15;1270:1;1291;1301:1065;1317:6;1312:3;1309:15;1301:1065;;;1386:22;;;1410:66;1382:95;1370:108;;1501:13;;1588:9;;1599:42;1584:58;1569:74;;1682:11;;1676:18;1714:15;;;1707:27;;;1795:19;;1541:15;;;1827:24;;;1917:21;;;;1962:1;;1885:2;1873:15;;;1976:282;1992:8;1987:3;1984:17;1976:282;;;2073:15;;2090:66;2069:88;2055:103;;2227:17;;;;2020:1;2011:11;;;;;2184:14;;;;1976:282;;;-1:-1:-1;2344:12:26;;;;2281:5;-1:-1:-1;;;2309:15:26;;;;1343:1;1334:11;1301:1065;;;-1:-1:-1;2383:6:26;;700:1695;-1:-1:-1;;;;;;;;;700:1695:26:o;2400:250::-;2485:1;2495:113;2509:6;2506:1;2503:13;2495:113;;;2585:11;;;2579:18;2566:11;;;2559:39;2531:2;2524:10;2495:113;;;-1:-1:-1;;2642:1:26;2624:16;;2617:27;2400:250::o;2655:330::-;2697:3;2735:5;2729:12;2762:6;2757:3;2750:19;2778:76;2847:6;2840:4;2835:3;2831:14;2824:4;2817:5;2813:16;2778:76;:::i;:::-;2899:2;2887:15;2904:66;2883:88;2874:98;;;;2974:4;2870:109;;2655:330;-1:-1:-1;;2655:330:26:o;2990:862::-;3152:4;3181:2;3221;3210:9;3206:18;3251:2;3240:9;3233:21;3274:6;3309;3303:13;3340:6;3332;3325:22;3378:2;3367:9;3363:18;3356:25;;3440:2;3430:6;3427:1;3423:14;3412:9;3408:30;3404:39;3390:53;;3478:2;3470:6;3466:15;3499:1;3509:314;3523:6;3520:1;3517:13;3509:314;;;3612:66;3600:9;3592:6;3588:22;3584:95;3579:3;3572:108;3703:40;3736:6;3727;3721:13;3703:40;:::i;:::-;3693:50;-1:-1:-1;3801:12:26;;;;3766:15;;;;3545:1;3538:9;3509:314;;;-1:-1:-1;3840:6:26;;2990:862;-1:-1:-1;;;;;;;2990:862:26:o;4768:576::-;5107:2;5096:9;5089:21;5070:4;5133:49;5178:2;5167:9;5163:18;4687:1;4675:14;;4721:7;4714:4;4705:14;;4698:31;4754:2;4745:12;;4610:153;5133:49;5230:9;5222:6;5218:22;5213:2;5202:9;5198:18;5191:50;5258:37;5288:6;4687:1;4675:14;;4721:7;4714:4;4705:14;;4698:31;4754:2;4745:12;;4610:153;5258:37;5250:45;;;5331:6;5326:2;5315:9;5311:18;5304:34;4768:576;;;;:::o;5349:349::-;5388:3;5419:66;5412:5;5409:77;5406:257;;5519:77;5516:1;5509:88;5620:4;5617:1;5610:15;5648:4;5645:1;5638:15;5406:257;-1:-1:-1;5690:1:26;5679:13;;5349:349::o;5885:184::-;5937:77;5934:1;5927:88;6034:4;6031:1;6024:15;6058:4;6055:1;6048:15;6972:277;7039:6;7092:2;7080:9;7071:7;7067:23;7063:32;7060:52;;;7108:1;7105;7098:12;7060:52;7140:9;7134:16;7193:5;7186:13;7179:21;7172:5;7169:32;7159:60;;7215:1;7212;7205:12;7159:60;7238:5;6972:277;-1:-1:-1;;;6972:277:26:o;8033:245::-;8112:6;8120;8173:2;8161:9;8152:7;8148:23;8144:32;8141:52;;;8189:1;8186;8179:12;8141:52;-1:-1:-1;;8212:16:26;;8268:2;8253:18;;;8247:25;8212:16;;8247:25;;-1:-1:-1;8033:245:26:o;8594:437::-;8673:1;8669:12;;;;8716;;;8737:61;;8791:4;8783:6;8779:17;8769:27;;8737:61;8844:2;8836:6;8833:14;8813:18;8810:38;8807:218;;8881:77;8878:1;8871:88;8982:4;8979:1;8972:15;9010:4;9007:1;9000:15;8807:218;;8594:437;;;:::o;9338:430::-;9535:66;9527:6;9523:79;9518:3;9511:92;9493:3;9632:6;9626:13;9648:74;9715:6;9711:1;9706:3;9702:11;9695:4;9687:6;9683:17;9648:74;:::i;:::-;9742:16;;;;9760:1;9738:24;;9338:430;-1:-1:-1;;;9338:430:26:o;9773:287::-;9902:3;9940:6;9934:13;9956:66;10015:6;10010:3;10003:4;9995:6;9991:17;9956:66;:::i;:::-;10038:16;;;;;9773:287;-1:-1:-1;;9773:287:26:o;10359:313::-;10429:6;10482:2;10470:9;10461:7;10457:23;10453:32;10450:52;;;10498:1;10495;10488:12;10450:52;10530:9;10524:16;10580:42;10573:5;10569:54;10562:5;10559:65;10549:93;;10638:1;10635;10628:12;10677:340;10866:42;10858:6;10854:55;10843:9;10836:74;10946:2;10941;10930:9;10926:18;10919:30;10817:4;10966:45;11007:2;10996:9;10992:18;10984:6;10966:45;:::i;:::-;10958:53;10677:340;-1:-1:-1;;;;10677:340:26:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_burnUnconfiguredContract()": "9fbee575",
    "test_mintUnconfiguredContract()": "1c9085fd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_burnUnconfiguredContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_mintUnconfiguredContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/multipool-core/CornerCases.t.sol\":\"MultipoolCornerCases\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\"lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/etf/Multipool.sol\":{\"keccak256\":\"0xcbe26eb4bceefa03bb9d59fe10bbe49ebe733fca249a0e122943e677158b4f83\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ecd3c930fd00e2be55f8a8b321c8d5ff0780cb8db4463727d342990e9601fa97\",\"dweb:/ipfs/QmNtcP41NfscTfD4eBRuFaAQJi32b6Ykkv3dd6bwoRX6Hs\"]},\"src/mocks/erc20.sol\":{\"keccak256\":\"0x0bfd00eb665dae4887561eba66fc2b9f70cb47d391ad9420e630f5b31d42f737\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0316f10dd9b3469624342ec08326a28fba65ac290f9f31d906a70c8e79c61ee0\",\"dweb:/ipfs/QmdEVXWsPGg8zgKcWqV3M2sri6R1DsAe6dUmYhtT7ziY52\"]},\"test/multipool-core/CornerCases.t.sol\":{\"keccak256\":\"0xcf20c87d1787a26225c0cd1cc9bd3eebb46b0fbe6aa729908bf3495f7d09739b\",\"urls\":[\"bzz-raw://939807ec01e0a7665f3a0219542c1c66057efd09335f7c4398978acaf2272fc1\",\"dweb:/ipfs/QmdHpGFKhezh5Ze8PivcfmdtDi2RcNyBa4555E3ERmS9FT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_burnUnconfiguredContract"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_mintUnconfiguredContract"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/multipool-core/CornerCases.t.sol": "MultipoolCornerCases"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/etf/Multipool.sol": {
        "keccak256": "0xcbe26eb4bceefa03bb9d59fe10bbe49ebe733fca249a0e122943e677158b4f83",
        "urls": [
          "bzz-raw://ecd3c930fd00e2be55f8a8b321c8d5ff0780cb8db4463727d342990e9601fa97",
          "dweb:/ipfs/QmNtcP41NfscTfD4eBRuFaAQJi32b6Ykkv3dd6bwoRX6Hs"
        ],
        "license": "GPL-3.0"
      },
      "src/mocks/erc20.sol": {
        "keccak256": "0x0bfd00eb665dae4887561eba66fc2b9f70cb47d391ad9420e630f5b31d42f737",
        "urls": [
          "bzz-raw://0316f10dd9b3469624342ec08326a28fba65ac290f9f31d906a70c8e79c61ee0",
          "dweb:/ipfs/QmdEVXWsPGg8zgKcWqV3M2sri6R1DsAe6dUmYhtT7ziY52"
        ],
        "license": "Unlicense"
      },
      "test/multipool-core/CornerCases.t.sol": {
        "keccak256": "0xcf20c87d1787a26225c0cd1cc9bd3eebb46b0fbe6aa729908bf3495f7d09739b",
        "urls": [
          "bzz-raw://939807ec01e0a7665f3a0219542c1c66057efd09335f7c4398978acaf2272fc1",
          "dweb:/ipfs/QmdHpGFKhezh5Ze8PivcfmdtDi2RcNyBa4555E3ERmS9FT"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/multipool-core/CornerCases.t.sol",
    "id": 45528,
    "exportedSymbols": {
      "Context": [
        43677
      ],
      "DSTest": [
        2291
      ],
      "ERC20": [
        43552
      ],
      "IERC20": [
        43630
      ],
      "IERC20Metadata": [
        43655
      ],
      "MockERC20": [
        45282
      ],
      "MpAsset": [
        43695
      ],
      "MpContext": [
        43710
      ],
      "Multipool": [
        45233
      ],
      "MultipoolCornerCases": [
        45527
      ],
      "Ownable": [
        42965
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4477
      ],
      "StdCheats": [
        7295
      ],
      "StdInvariant": [
        7585
      ],
      "StdStorage": [
        8335
      ],
      "StdStyle": [
        10999
      ],
      "StdUtils": [
        11847
      ],
      "Test": [
        11898
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13425
      ],
      "console": [
        21489
      ],
      "console2": [
        29614
      ],
      "safeconsole": [
        42852
      ],
      "stdError": [
        7361
      ],
      "stdJson": [
        8161
      ],
      "stdMath": [
        8303
      ],
      "stdStorage": [
        9788
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1533:25",
    "nodes": [
      {
        "id": 45284,
        "nodeType": "PragmaDirective",
        "src": "0:25:25",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 45285,
        "nodeType": "ImportDirective",
        "src": "27:28:25",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45528,
        "sourceUnit": 11899,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45286,
        "nodeType": "ImportDirective",
        "src": "56:44:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45528,
        "sourceUnit": 43553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45287,
        "nodeType": "ImportDirective",
        "src": "101:41:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45528,
        "sourceUnit": 42966,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45289,
        "nodeType": "ImportDirective",
        "src": "143:54:25",
        "nodes": [],
        "absolutePath": "src/mocks/erc20.sol",
        "file": "../../src/mocks/erc20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45528,
        "sourceUnit": 45283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45288,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45282,
              "src": "152:9:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45293,
        "nodeType": "ImportDirective",
        "src": "198:76:25",
        "nodes": [],
        "absolutePath": "src/etf/Multipool.sol",
        "file": "../../src/etf/Multipool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45528,
        "sourceUnit": 45234,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45290,
              "name": "Multipool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45233,
              "src": "207:9:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45291,
              "name": "MpContext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43710,
              "src": "218:9:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45292,
              "name": "MpAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43695,
              "src": "229:7:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45527,
        "nodeType": "ContractDefinition",
        "src": "276:1256:25",
        "nodes": [
          {
            "id": 45298,
            "nodeType": "VariableDeclaration",
            "src": "320:12:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mp",
            "nameLocation": "330:2:25",
            "scope": 45527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Multipool_$45233",
              "typeString": "contract Multipool"
            },
            "typeName": {
              "id": 45297,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45296,
                "name": "Multipool",
                "nameLocations": [
                  "320:9:25"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45233,
                "src": "320:9:25"
              },
              "referencedDeclaration": 45233,
              "src": "320:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multipool_$45233",
                "typeString": "contract Multipool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45302,
            "nodeType": "VariableDeclaration",
            "src": "338:18:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "350:6:25",
            "scope": 45527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
              "typeString": "contract MockERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 45300,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 45299,
                  "name": "MockERC20",
                  "nameLocations": [
                    "338:9:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45282,
                  "src": "338:9:25"
                },
                "referencedDeclaration": 45282,
                "src": "338:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MockERC20_$45282",
                  "typeString": "contract MockERC20"
                }
              },
              "id": 45301,
              "nodeType": "ArrayTypeName",
              "src": "338:11:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage_ptr",
                "typeString": "contract MockERC20[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45305,
            "nodeType": "VariableDeclaration",
            "src": "362:15:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "372:5:25",
            "scope": 45527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45303,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 45304,
              "nodeType": "ArrayTypeName",
              "src": "362:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45307,
            "nodeType": "VariableDeclaration",
            "src": "383:13:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenNum",
            "nameLocation": "388:8:25",
            "scope": 45527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45306,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "383:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45309,
            "nodeType": "VariableDeclaration",
            "src": "402:12:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "userNum",
            "nameLocation": "407:7:25",
            "scope": 45527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45308,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "402:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45410,
            "nodeType": "FunctionDefinition",
            "src": "421:519:25",
            "nodes": [],
            "body": {
              "id": 45409,
              "nodeType": "Block",
              "src": "445:495:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45312,
                      "name": "tokenNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45307,
                      "src": "455:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 45313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "466:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "455:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45315,
                  "nodeType": "ExpressionStatement",
                  "src": "455:12:25"
                },
                {
                  "expression": {
                    "id": 45318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45316,
                      "name": "userNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45309,
                      "src": "477:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 45317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "487:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "477:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45319,
                  "nodeType": "ExpressionStatement",
                  "src": "477:11:25"
                },
                {
                  "expression": {
                    "id": 45327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45320,
                      "name": "mp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45298,
                      "src": "507:2:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Multipool_$45233",
                        "typeString": "contract Multipool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4e616d65",
                          "id": 45324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "526:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
                            "typeString": "literal_string \"Name\""
                          },
                          "value": "Name"
                        },
                        {
                          "hexValue": "53594d424f4c",
                          "id": 45325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_649624ae0b7c137eebb6630d1048ad5216d6db6cc2e758ebc09aa368366896b4",
                            "typeString": "literal_string \"SYMBOL\""
                          },
                          "value": "SYMBOL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
                            "typeString": "literal_string \"Name\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_649624ae0b7c137eebb6630d1048ad5216d6db6cc2e758ebc09aa368366896b4",
                            "typeString": "literal_string \"SYMBOL\""
                          }
                        ],
                        "id": 45323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "512:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Multipool_$45233_$",
                          "typeString": "function (string memory,string memory) returns (contract Multipool)"
                        },
                        "typeName": {
                          "id": 45322,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45321,
                            "name": "Multipool",
                            "nameLocations": [
                              "516:9:25"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45233,
                            "src": "516:9:25"
                          },
                          "referencedDeclaration": 45233,
                          "src": "516:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Multipool_$45233",
                            "typeString": "contract Multipool"
                          }
                        }
                      },
                      "id": 45326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "512:31:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Multipool_$45233",
                        "typeString": "contract Multipool"
                      }
                    },
                    "src": "507:36:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Multipool_$45233",
                      "typeString": "contract Multipool"
                    }
                  },
                  "id": 45328,
                  "nodeType": "ExpressionStatement",
                  "src": "507:36:25"
                },
                {
                  "body": {
                    "id": 45350,
                    "nodeType": "Block",
                    "src": "585:72:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "746f6b656e",
                                  "id": 45344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "625:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                                    "typeString": "literal_string \"token\""
                                  },
                                  "value": "token"
                                },
                                {
                                  "hexValue": "746f6b656e",
                                  "id": 45345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "634:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                                    "typeString": "literal_string \"token\""
                                  },
                                  "value": "token"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 45346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "643:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                                    "typeString": "literal_string \"token\""
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                                    "typeString": "literal_string \"token\""
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 45343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "611:13:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_MockERC20_$45282_$",
                                  "typeString": "function (string memory,string memory,uint256) returns (contract MockERC20)"
                                },
                                "typeName": {
                                  "id": 45342,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 45341,
                                    "name": "MockERC20",
                                    "nameLocations": [
                                      "615:9:25"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 45282,
                                    "src": "615:9:25"
                                  },
                                  "referencedDeclaration": 45282,
                                  "src": "615:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$45282",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              },
                              "id": 45347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "611:34:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$45282",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$45282",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "expression": {
                              "id": 45338,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "599:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "606:4:25",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "599:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_MockERC20_$45282_$dyn_storage_ptr_$_t_contract$_MockERC20_$45282_$returns$__$attached_to$_t_array$_t_contract$_MockERC20_$45282_$dyn_storage_ptr_$",
                              "typeString": "function (contract MockERC20[] storage pointer,contract MockERC20)"
                            }
                          },
                          "id": 45348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "599:47:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45349,
                        "nodeType": "ExpressionStatement",
                        "src": "599:47:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45332,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45330,
                      "src": "566:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 45333,
                      "name": "tokenNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45307,
                      "src": "570:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "566:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45351,
                  "initializationExpression": {
                    "assignments": [
                      45330
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45330,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "563:1:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 45351,
                        "src": "558:6:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45329,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45331,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "558:6:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "580:3:25",
                      "subExpression": {
                        "id": 45335,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45330,
                        "src": "580:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45337,
                    "nodeType": "ExpressionStatement",
                    "src": "580:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "553:104:25"
                },
                {
                  "body": {
                    "id": 45375,
                    "nodeType": "Block",
                    "src": "697:68:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 45369,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45353,
                                          "src": "749:1:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 45367,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "738:3:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 45368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "742:6:25",
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "738:10:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 45370,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "738:13:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 45366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "731:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 45365,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "731:6:25",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 45371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "731:21:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 45364,
                                "name": "makeAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6293,
                                "src": "722:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (string memory) returns (address)"
                                }
                              },
                              "id": 45372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "722:31:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45361,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45305,
                              "src": "711:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 45363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "717:4:25",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "711:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 45373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "711:43:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45374,
                        "nodeType": "ExpressionStatement",
                        "src": "711:43:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45355,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45353,
                      "src": "679:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 45356,
                      "name": "userNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45309,
                      "src": "683:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "679:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45376,
                  "initializationExpression": {
                    "assignments": [
                      45353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45353,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "676:1:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 45376,
                        "src": "671:6:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45352,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45354,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "671:6:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "692:3:25",
                      "subExpression": {
                        "id": 45358,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45353,
                        "src": "692:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45360,
                    "nodeType": "ExpressionStatement",
                    "src": "692:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "666:99:25"
                },
                {
                  "body": {
                    "id": 45407,
                    "nodeType": "Block",
                    "src": "805:129:25",
                    "statements": [
                      {
                        "body": {
                          "id": 45405,
                          "nodeType": "Block",
                          "src": "851:73:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 45399,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45305,
                                      "src": "884:5:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 45401,
                                    "indexExpression": {
                                      "id": 45400,
                                      "name": "u",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45378,
                                      "src": "890:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "884:8:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "3130303030303030303030653138",
                                    "id": 45402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "894:14:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                                      "typeString": "int_const 10000000000000000000000000000"
                                    },
                                    "value": "10000000000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                                      "typeString": "int_const 10000000000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 45395,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45302,
                                      "src": "869:6:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                        "typeString": "contract MockERC20[] storage ref"
                                      }
                                    },
                                    "id": 45397,
                                    "indexExpression": {
                                      "id": 45396,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45387,
                                      "src": "876:1:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "869:9:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockERC20_$45282",
                                      "typeString": "contract MockERC20"
                                    }
                                  },
                                  "id": 45398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "879:4:25",
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45281,
                                  "src": "869:14:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 45403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "869:40:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 45404,
                              "nodeType": "ExpressionStatement",
                              "src": "869:40:25"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 45389,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45387,
                            "src": "832:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 45390,
                            "name": "tokenNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45307,
                            "src": "836:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "832:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 45406,
                        "initializationExpression": {
                          "assignments": [
                            45387
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 45387,
                              "mutability": "mutable",
                              "name": "t",
                              "nameLocation": "829:1:25",
                              "nodeType": "VariableDeclaration",
                              "scope": 45406,
                              "src": "824:6:25",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 45386,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "824:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 45388,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "824:6:25"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 45393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "846:3:25",
                            "subExpression": {
                              "id": 45392,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45387,
                              "src": "846:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 45394,
                          "nodeType": "ExpressionStatement",
                          "src": "846:3:25"
                        },
                        "nodeType": "ForStatement",
                        "src": "819:105:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45380,
                      "name": "u",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45378,
                      "src": "787:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 45381,
                      "name": "userNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45309,
                      "src": "791:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "787:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45408,
                  "initializationExpression": {
                    "assignments": [
                      45378
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45378,
                        "mutability": "mutable",
                        "name": "u",
                        "nameLocation": "784:1:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 45408,
                        "src": "779:6:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45377,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45379,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "779:6:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "800:3:25",
                      "subExpression": {
                        "id": 45383,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45378,
                        "src": "800:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45385,
                    "nodeType": "ExpressionStatement",
                    "src": "800:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "774:160:25"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "430:5:25",
            "parameters": {
              "id": 45310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:25"
            },
            "returnParameters": {
              "id": 45311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:25"
            },
            "scope": 45527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45493,
            "nodeType": "FunctionDefinition",
            "src": "946:391:25",
            "nodes": [],
            "body": {
              "id": 45492,
              "nodeType": "Block",
              "src": "994:343:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 45416,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45305,
                          "src": "1013:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 45418,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1019:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1013:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45413,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1004:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1007:5:25",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13023,
                      "src": "1004:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:18:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45420,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:18:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45427,
                            "name": "mp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45298,
                            "src": "1059:2:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Multipool_$45233",
                              "typeString": "contract Multipool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Multipool_$45233",
                              "typeString": "contract Multipool"
                            }
                          ],
                          "id": 45426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45425,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1051:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:11:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 45429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 45421,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45302,
                          "src": "1032:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                            "typeString": "contract MockERC20[] storage ref"
                          }
                        },
                        "id": 45423,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1039:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1032:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$45282",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 45424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1042:8:25",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43089,
                      "src": "1032:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45431,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d554c5449504f4f4c3a207a65726f207072696365",
                        "id": 45435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98c695be3825c15ebd1413abdd76c9209123283e1651dc21cd51810ceb20411f",
                          "typeString": "literal_string \"MULTIPOOL: zero price\""
                        },
                        "value": "MULTIPOOL: zero price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_98c695be3825c15ebd1413abdd76c9209123283e1651dc21cd51810ceb20411f",
                          "typeString": "literal_string \"MULTIPOOL: zero price\""
                        }
                      ],
                      "expression": {
                        "id": 45432,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1080:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1083:12:25",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13079,
                      "src": "1080:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45437,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:40:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 45443,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "1146:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45445,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 45444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1153:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1146:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 45442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1138:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1138:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1138:18:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 45447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1158:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "baseExpression": {
                          "id": 45448,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45305,
                          "src": "1165:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 45450,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1165:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45438,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45298,
                        "src": "1130:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Multipool_$45233",
                          "typeString": "contract Multipool"
                        }
                      },
                      "id": 45440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1133:4:25",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44644,
                      "src": "1130:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 45451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 45452,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:44:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 45458,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "1213:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45460,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 45459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1220:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1213:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 45457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1205:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45456,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1205:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1205:18:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 45462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1225:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 45453,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45298,
                        "src": "1184:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Multipool_$45233",
                          "typeString": "contract Multipool"
                        }
                      },
                      "id": 45455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1187:17:25",
                      "memberName": "updateTargetShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45063,
                      "src": "1184:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45464,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:44:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 45470,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "1261:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45472,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 45471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1268:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1261:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 45469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1253:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1253:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:18:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 45474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 45465,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45298,
                        "src": "1238:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Multipool_$45233",
                          "typeString": "contract Multipool"
                        }
                      },
                      "id": 45467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1241:11:25",
                      "memberName": "updatePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45014,
                      "src": "1238:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45476,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 45482,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "1302:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45484,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 45483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1309:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1302:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 45481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1294:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1294:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1294:18:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 45486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1314:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "baseExpression": {
                          "id": 45487,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45305,
                          "src": "1321:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 45489,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1327:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1321:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45477,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45298,
                        "src": "1286:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Multipool_$45233",
                          "typeString": "contract Multipool"
                        }
                      },
                      "id": 45479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1289:4:25",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44644,
                      "src": "1286:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 45490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 45491,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:44:25"
                }
              ]
            },
            "functionSelector": "1c9085fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mintUnconfiguredContract",
            "nameLocation": "955:29:25",
            "parameters": {
              "id": 45411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:25"
            },
            "returnParameters": {
              "id": 45412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:25"
            },
            "scope": 45527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45526,
            "nodeType": "FunctionDefinition",
            "src": "1343:187:25",
            "nodes": [],
            "body": {
              "id": 45525,
              "nodeType": "Block",
              "src": "1391:139:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 45499,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45305,
                          "src": "1410:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 45501,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1416:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1410:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45496,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1401:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1404:5:25",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13023,
                      "src": "1401:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:18:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45503,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:18:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d554c5449504f4f4c3a207a65726f207072696365",
                        "id": 45507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1445:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98c695be3825c15ebd1413abdd76c9209123283e1651dc21cd51810ceb20411f",
                          "typeString": "literal_string \"MULTIPOOL: zero price\""
                        },
                        "value": "MULTIPOOL: zero price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_98c695be3825c15ebd1413abdd76c9209123283e1651dc21cd51810ceb20411f",
                          "typeString": "literal_string \"MULTIPOOL: zero price\""
                        }
                      ],
                      "expression": {
                        "id": 45504,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1429:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1432:12:25",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13079,
                      "src": "1429:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45509,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:40:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 45515,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45302,
                              "src": "1495:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_MockERC20_$45282_$dyn_storage",
                                "typeString": "contract MockERC20[] storage ref"
                              }
                            },
                            "id": 45517,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 45516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1502:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1495:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$45282",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 45514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1487:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1487:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:18:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 45519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1507:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "baseExpression": {
                          "id": 45520,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45305,
                          "src": "1514:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 45522,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 45521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1520:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1514:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45510,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45298,
                        "src": "1479:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Multipool_$45233",
                          "typeString": "contract Multipool"
                        }
                      },
                      "id": 45512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1482:4:25",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44766,
                      "src": "1479:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 45523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:44:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 45524,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:44:25"
                }
              ]
            },
            "functionSelector": "9fbee575",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_burnUnconfiguredContract",
            "nameLocation": "1352:29:25",
            "parameters": {
              "id": 45494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:25"
            },
            "returnParameters": {
              "id": 45495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:0:25"
            },
            "scope": 45527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45294,
              "name": "Test",
              "nameLocations": [
                "309:4:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11898,
              "src": "309:4:25"
            },
            "id": 45295,
            "nodeType": "InheritanceSpecifier",
            "src": "309:4:25"
          }
        ],
        "canonicalName": "MultipoolCornerCases",
        "contractDependencies": [
          45233,
          45282
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45527,
          11898,
          2357,
          2354,
          11847,
          7585,
          7295,
          6531,
          4477,
          3784,
          2291
        ],
        "name": "MultipoolCornerCases",
        "nameLocation": "285:20:25",
        "scope": 45528,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ]
  },
  "id": 25
}